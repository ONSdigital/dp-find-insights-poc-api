// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package Swagger

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
