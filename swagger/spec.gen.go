// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package Swagger

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
