// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package Swagger

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
