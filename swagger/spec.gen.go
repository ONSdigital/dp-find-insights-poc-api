// Package Swagger provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package Swagger

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
